{{!< default}}
{{!-- 
/**
 * Uncertainty Project
 * Developed by Engagement Lab, 2016
 * ==============
 * 
 * Script include for global logic
 * ==========
 */
--}}

<script type="text/javascript">

		var socket;
		var socketEvents;
		var gameCode;
		var data;
		var bottom;
		var commentLimit
		var score;

$(document).ready(function() {

	// All possible socket event IDs
	var eventIds = [
	
	'connect',
	'disconnect',
	'game:start', 

	'game:newEvent',
	'game:comments', 
	'game:update',
	'game:newRound',

	'event:score',

	'comments:end', 
	'comment:update'

	];


	/* 
	 Associate provided data object with current game ID - Credit to Johnny Richardson
	*/
	var emitData = function(data) {

		console.log(data, " data emitting");

		if(gameCode === undefined && typeof(data.code) !== 'undefined')
			gameCode = data.code;

		return { gameId: gameCode, msgData: data };
	
	};

	/* 
	 Obtains the embedded data ('data-key="something"') object from the provided submit button - Credit to Johnny Richardson
	*/
	var getFormData = function(submitElement) {

		var pkg;

		console.log(submitElement[0].dataset)

		if(submitElement[0].dataset === undefined){
			return undefined;
		}
		
		try {
			pkg = JSON.parse(submitElement[0].dataset.package);
			console.log(pkg, "is hte package");
			return pkg;

		}
		catch(e) {
			pkg = submitElement[0].dataset.package;
		}

		if($.isPlainObject(pkg)) {
			$.each(Object.keys(pkg), function( key, value ) {

				if(pkg[value] !== undefined)
				  pkg[value] = $(pkg[value].toString()).val();

			});
		}
		else if(!submitElement.is('button'))
			pkg = $(pkg).val();

		console.log(pkg, "is hte package");

		return pkg;

	};

	var registerEvents = function() {
		$.each(eventIds, function(index, id) {
      
      socket.on(id, function(eventData) {
            
            socketEvents(id, eventData);

            if(typeof(gameEvents) == "function")
                gameEvents(id, eventData);

        });

    });
	};


	// Start the game
	$(document).on('click', '.form .submit', function(evt) {
					    
	    var event = $(this).data().event;
	    var pkg = getFormData($(this));

	    console.log(pkg, " form submitted packge");

	    	$.post( 
			  	"/api/create/",
					pkg,
					function( data ) {
						data.gameId = 'TEST';

						if(data.error_code !== undefined) {

							// if(data.error_code === 'need_content')
								// $('#session-create #categories').addClass('invalid');
							
							$('#session-create .error').text(data.msg).fadeIn();
							
							return;
						}
					  window.location = data;
					  socket.emit("game:start", 'TEST');

					});

	});

	// Start the game
	$(document).on('click', 'button#game-newEvent', function(evt) {
					    
	    var event = $(this).data().event;
	    var pkg = getFormData($(this));

	    console.log(pkg, " form submitted packge");

	    socket.emit('game:newEvent', 'TEST');

	});

	// Start the game
	$(document).on('click', 'button#game-newRound', function(evt) {
					    
	    var event = $(this).data().event;
	    var pkg = getFormData($(this));

	    console.log(pkg, " form submitted packge");

	    socket.emit('game:newRound', 'TEST');

	});

	// On Window Resize






		// Open Socket connection
		socket = io('//{{host}}', {
		 	path: '/fake-news', 
		 	reconnection: true,
		 	'reconnectionDelay': 500,
		 	'maxReconnectionAttempts':Infinity
		 });

    registerEvents();

    socketEvents = function(eventId, eventData) {
	    
	    switch (eventId) {

	        case 'connect':

		        console.log('connected');

		        break;

		      case 'game:newEvent': 

		      	score = 0;

			      var gameId = '{{gameId}}';

		      	data = eventData.data;

	        	console.log("DATA: ", data)

	        	$('.pre').hide();

	        	$("#event").html(eventData.html).show();

		      	// Show the event and goal for 5 seconds, then animate tiny
		      	setTimeout(function () {

								$('#new-event').animate({ 
									height: '100px'
								}, 2000, 'linear', function(){

									$('.feed-wrap').show();

									console.log("animation finished");

									$(document).trigger("event:comments");					

								});

					  }, 1000);

					  {{> script/falling_logic}}

		      	break;

	        case 'comment:update':

		        console.log(eventData.msg);

		        break;

		      case 'game:update':

		        console.log(eventData.article, " is what we are updating");

		        var commentId = '#' + eventData.article.key;
		        console.log(commentId);

		        for(var i = 0, len = eventData.article.twisted; i < len; i++) {

		        	$(commentId).clone().appendTo('#comment-feed').css('bottom','70%').addClass('dup');

		        }

		        break;

					case 'event:score':

	        	data = eventData;

	        	console.log("DATA: ", data);

	        	$('#event').hide();

	        	$("#round").html(eventData.html).show();

	        	$('#twisted-number').html(data.points);

	        	$('#round-score').show();

	        	setTimeout(function () {

	        		var height = $('#round-feed').height();
	        		$('#round-feed').css('position', 'absolute');

								$('#round-feed').animate({ 
									top: '-' + height + 'px'
								}, 2000, 'linear', function(){

									$('.round-modal').show();

									console.log("animation finished");

								});

					  }, 1000);

		        break;

	        default:

	          console.warn('No handler found for event "' + eventId + '" in socketEvents.');

	          break;
		  }

		};

		



});
	
</script>