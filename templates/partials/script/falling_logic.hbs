{{!< default}}
{{!-- 
/**
 * Uncertainty Project
 * Developed by Engagement Lab, 2016
 * ==============
 * 
 * Script include for global logic
 * ==========
 */
--}}


var event;
var gameId = '{{gameId}}';
var bottom;
var commentStack;
var commentFalling;

	$(document).on('event:comments', function() {

		bottom = 0;
		// Call comments animation logic	
		StartComments();	

		commentLimit = $('.comment.stuck').length;


	});


	// When comment lands, reset animation 
	$(document).on('newBottom', function() {

			console.log("get a new bottom");

			checkComments();

			_.each($('.comment.falling'), function(t) {

				$(t).stop();
				checkComments();

				$(t).animate({ 
					bottom: bottom + "px" 
				}, 4000, 'linear', function(){

					$(this).addClass('stuck');
					$(this).removeClass('falling');
					checkComments();

					var data = $(this).attr('id');

					console.log(data + " this comment has landed")

					socket.emit('comments:landed', { gameId: gameId, comment: data });

					// send jquery event to re-animate to new bottom. 
					$(document).trigger("newBottom");

				});

			});

	});

	// Comment Logic

	$('.comment').on('click', function(){

		if ($(this).hasClass('stuck')){
			return;

		} else {

			console.log("click");

			$(this).removeClass('falling');
			$(this).stop();
			$(this).hide();

			var data = $(this).attr('id');
			
			socket.emit('comment:update', { gameId: gameId, comment: data });
			
		}
		

	});

	var checkComments = function() {

		// var postScore = 0;
		var commentFalling = $('.comment.falling').length;
		console.log(commentFalling, " number falling");

		var commentRemain = $('.sticky').length;
		var commentStack = $('.stuck').length;

		if ( commentStack >= 4 || commentFalling == '0' ) {

			console.log("four comments. lets go");

			var data = {
				event: $('.event.ACTIVE').attr('id'),

			}

			socket.emit('comments:end', { gameId: gameId, data: data });

		} else {

			bottom = 60 * commentStack;
			console.log(bottom);

		}
	}

	var StartComments = function() {

		_.each($('.comment.sticky'), function(comment, i) {

			checkComments();

			setTimeout(function () {

				$(comment).show(function() {

					$(comment).addClass('falling');
					$(comment).removeClass('sticky');

					checkComments();

					$(this).animate({ 
						bottom: bottom + "px" 
					}, 4000, 'linear', function(){

						console.log("animation finished");
						$(this).addClass('stuck');
						$(this).removeClass('falling');

						checkComments();

						var data = $(this).attr('id');

						console.log(data + " this comment has landed")

						socket.emit('comments:landed', { gameId: gameId, comment:data });

						// send jquery event to re-animate to new bottom. 
						$(document).trigger("newBottom");

					});

				});

		  }, 3000 * i );

		});

	}
