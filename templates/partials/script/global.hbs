{{!< default}}
{{!-- 
/**
 * Uncertainty Project
 * Developed by Engagement Lab, 2016
 * ==============
 * 
 * Script include for global logic
 * ==========
 */
--}}

<script type="text/javascript">

		var socket;
		var socketEvents;
		var gameCode;
		var data;
		var bottom;
		var commentLimit
		var score;

$(document).ready(function() {

	// All possible socket event IDs
	var eventIds = [
	
	'connect',
	'disconnect',

	'game:start', 
	'game:rules',
	'game:end',

	'game:newEvent',
	'game:comments', 
	'game:update',
	'game:newRound',

	'event:score',

	'comments:end', 
	'comment:update',
	'comment:reaction'

	];


	/* 
	 Associate provided data object with current game ID - Credit to Johnny Richardson
	*/
	var emitData = function(data) {

		console.log(data, " data emitting");

		if(gameCode === undefined && typeof(data.code) !== 'undefined')
			gameCode = data.code;

		return { gameId: gameCode, msgData: data };
	
	};

	/* 
	 Obtains the embedded data ('data-key="something"') object from the provided submit button - Credit to Johnny Richardson
	*/
	var getFormData = function(submitElement) {

		var pkg;

		console.log(submitElement[0].dataset)

		if(submitElement[0].dataset === undefined){
			return undefined;
		}
		
		try {
			pkg = JSON.parse(submitElement[0].dataset.package);
			console.log(pkg, "is hte package");
			return pkg;

		}
		catch(e) {
			pkg = submitElement[0].dataset.package;
		}

		if($.isPlainObject(pkg)) {
			$.each(Object.keys(pkg), function( key, value ) {

				if(pkg[value] !== undefined)
				  pkg[value] = $(pkg[value].toString()).val();

			});
		}
		else if(!submitElement.is('button'))
			pkg = $(pkg).val();

		console.log(pkg, "is hte package");

		return pkg;

	};

	var registerEvents = function() {
		$.each(eventIds, function(index, id) {
      
      socket.on(id, function(eventData) {
            
            socketEvents(id, eventData);

            if(typeof(gameEvents) == "function")
                gameEvents(id, eventData);

        });

    });
	};


	// Start the game
	$(document).on('click', '.form .submit', function(evt) {
					    
	    var event = $(this).data().event;
	    var pkg = getFormData($(this));

	    console.log(pkg, " form submitted packge");

	    	$.post( 
			  	"/api/create/",
					pkg,
					function( data ) {
						data.gameId = 'TEST';

						if(data.error_code !== undefined) {

							// if(data.error_code === 'need_content')
								// $('#session-create #categories').addClass('invalid');
							
							$('#session-create .error').text(data.msg).fadeIn();
							
							return;
						}
					  window.location = data;
					  console.log("this is the rules")
					  socket.emit("game:start", 'TEST');

					});

	});

	setTimeout(function () {

    $('.home .form').fadeIn();

  }, 3000);

	// Start the game
	$(document).on('click', 'button#game-newEvent', function(evt) {
					    
	    var event = $(this).data().event;
	    var pkg = getFormData($(this));

	    console.log(pkg, " form submitted packge");

	    socket.emit('game:newEvent', 'TEST');

	});

	// Start the game
	$(document).on('click', 'button#game-newRound', function(evt) {
					    
	    var event = $(this).data().event;
	    var pkg = getFormData($(this));

	    console.log(pkg, " form submitted packge");

	    socket.emit('game:newRound', 'TEST');

	});



	// On Window Resize






		// Open Socket connection
		socket = io('//{{host}}', {
		 	path: '/fake-news', 
		 	reconnection: true,
		 	'reconnectionDelay': 500,
		 	'maxReconnectionAttempts':Infinity
		 });

    registerEvents();

    socketEvents = function(eventId, eventData) {
	    
	    switch (eventId) {

	        case 'connect':

		        console.log('connected');

		       	_.each($('.screen'), function(item, index) {

	      			$(item).attr('id', 'screen-' + index);

	      			setTimeout(function () {

		        			$(item).fadeIn(function(){

		        				if ($(item).hasClass('last')){
		        					console.log("last screen")
		        				} else  {
		        					setTimeout(function(){

			        					$(item).fadeOut();

			        				}, 5000);
		        				}
		        				
		        			});

	      				}, 6000 * index);

	      		});

		        break;

		      case 'game:newEvent': 

		      	score = 0;

			      var gameId = '{{gameId}}';

		      	data = eventData.data;

	        	console.log("DATA: ", data)

	        	$('.pre').hide();

	        	$("#event").html(eventData.html).fadeIn(function(){
	        		// Start that timer!
		        	$({ countNum: $('.header .counter').text() })
						  .animate({ countNum: 0 },
						  { 
						    duration: 15000,
						    easing:'linear',
						    step: function() {
						      $('.counter').text(Math.floor(this.countNum));
						    },
						    complete: function() {
						      $('.counter').fadeOut();
						    }
						  });

	        	});

		      	// Show the event and goal for 7 seconds, then animate tiny
		      	setTimeout(function () {

		      		$('.details').fadeOut();

								$('#new-event').animate({ 
									height: '200px'
								}, 2000, 'linear', function(){

									$('.feed-wrap').show();

									$(document).trigger("event:comments");					

								});

					  }, 15000);

					  {{> script/falling_logic}}

		      	break;

	        case 'comment:update':

		        console.log(eventData.msg);

		        break;

		      case 'game:update':

		      var gameId = '{{gameId}}'; 

		        var commentId = '#' + eventData.article;

		        var count = (Math.random() * 5) + 2;

		        for(var i = 0; i < count; i++){

		        	console.log("dick");

		        	var div = document.createElement('div');
		        	$(div).appendTo($(commentId));

			        if (eventData.reaction == 'likes') {
			        	console.log("liked!")
			        	$(div).addClass('reaction likes');
			        } else if (eventData.reaction == 'angry') {
			        	console.log("not liked!")
				        $(div).addClass('reaction angry');
			        }		        	
		        	
		        }

		        var reaction = $(commentId + ' .reaction');
		        console.log(reaction);

		        _.each(reaction, function(icn, index) {

		        	// Give each reaction a random position
		        	var left = (Math.random() * 330) + 10;
		        	var top = (Math.random() * 120) + 10;
		        	$(icn).css('top', top + 'px');
		        	$(icn).css('left', left + 'px');

		        	// Fade those suckers in one at a time
		        	setTimeout(function(){
		        		$(icn).fadeIn();
		        		$(icn).on('click', function() {
		        			socket.emit('comment:reaction', { gameId: gameId, reaction: eventData.reaction });
			        		$(this).hide();
			        	});

		        	}, 2000 * index);
	        		
		        });

		        break;

					case 'event:score':

	        	data = eventData;

	        	console.log("DATA: ", data);

	        	$('#event').hide();

	        	$("#round").html(eventData.html).show();

	        	$('#twisted-number').html(data.points);

	        	$('#round-score').show();

	        	setTimeout(function () {

	        		var height = $('#round-feed').height();
	        		$('#round-feed').css('position', 'absolute');

								$('#round-feed').animate({ 
									top: '-' + height + 'px'
								}, 2000, 'linear', function(){

									$('#round-feed').hide();

									$('.round-modal').fadeIn();

									console.log("animation finished");

								});

					  }, 10000);

		        break;

		      case 'game:end':

			      $('#round').hide();

		      	$("#game-over").html(eventData.html).show();

		      	$('.final-followers').text(eventData.data);

		      	break;

	        default:

	          console.warn('No handler found for event "' + eventId + '" in socketEvents.');

	          break;
		  }

		};

		



});
	
</script>